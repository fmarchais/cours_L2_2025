---
title: "Introduction"
author: "Félix Marchais"
date: "2025-08-12"
draft: false
format: live-html
engine: knitr
webr:
  packages: 
    - dplyr
    - ggplot2
  render-df: gt-interactive
execute: 
  eval: true 
  echo: true
  message: false
  warning: false
  comment: false
---
{{< include _extensions/r-wasm/live/_knitr.qmd >}}

# La bioinformatique, pourquoi faire ?

La biologie est une discipline qui étudie des sujets complexes : les être vivants. Cette complexité est due aux très nombreuses interactions entre les "briques" qui composent les être vivants, à différentes échelles : les interactions chimiques entre les atomes, les molécules, les protéines, les cellules, les tissus, les organes et même entre les individus. Ainsi, il est difficile d'étudier l'effet d'une protéine sans comprendre ses interactions avec le reste de l'organisme, il faut donc prendre en compte tout l'environnement autour du sujet d'étude pour bien le comprendre. \n

Dans le domaine de la Recherche Clinique, on dit souvent que pour développer *UN* médicament, il faut screener 10.000 molécules. C'est parce que pour 10.000 molécules prometteuses *sur le papier*, en réalité seules 1.000 environ démontreront une efficacité sur des cellules isolées. Parmis ces 1.000, seules 100 montreront une efficacité dans les tests précliniques (organes, animaux), et seules 10 passeront à l'étape d'expérimentation sur l'humain, pour finalement avoir une molécule qui finira en médicament. \n

Pour illustrer cela, on peut prendre l'exemple d'une boîte de petri qui contiendrait des tissus cancéreux : y mettre le feu permet de détruire les cellules cancéreuses, mais n'en fait pas un bon traitement pour autant : il faut prendre en compte le contexte dans lequel l'objet d'étude évolue (ici, en l'occurrence : le corps humain) \n

Mais dans un génome qui fait 3.2 milliards de paires de bases, il est difficile de retenir toutes les interactions entre les différents gènes, ou même de simplement les lister. L'informatique est alors apparue comme une solution, dans un premier temps de stockage et de requêtage, puis de calcul et de visualisation, pour aller jusqu'à permettre aujourd'hui d'effectuer des prédictions.

# Objectif du cours

-   Comprendre les bases de la programmation

    -   Le fonctionnement d'un langage de programmation

    -   Les types de données

    -   L'utilisation des fonctions

-   Découvrir la programmation en R pour :

    -   Importer, vérifier et nettoyer des données

    -   Réaliser des statistiques simples (univariées)

    -   Créer des graphes

# R et la programmation

R est un langage de programmation parmis tant d'autres (C, Python, Java...) : il permet de donner des instructions à un ordinateur, comme on donnerait des instructions à une calculatrice pour réaliser un calcul.\n

R est spécialisé dans le traitement, l'analyse et la visualisation de données et permet de générer des rapports au format PDF par exemple, ou des applications Web.\n

On parle de *langages de programmation* car les instructions que l'on utilise sont proches du langage naturel. Par exemple, on comprendra facilement que la commande "print(cos(32))" signifie "imprime le résultat du cosinus de 32".

Un langage de programmation est composé de noms (appelés "objets"), de verbes (fonctions), et de conjonctions de coordination/subordination (*si*, *et*, *ou*, *ni*, *quand*, *comme*), avec une grammaire pour lier le tout

## Quelques exemples

### Statistique descriptive

::: panel-tabset
### Data

```{webr iris_1}
iris
```

### Code

```{webr iris_2}
library(dplyr)

iris %>% 
  group_by(Species) %>%
  summary() 
```

:::

## Graphes

```{webr ggplot_1, message = FALSE, warning = FALSE}
library(ggplot2)

ggplot(
  data = iris,
  mapping = aes(
    x = Petal.Length, 
    y = Petal.Width, 
    color = Species
    )
  ) +
  geom_point() +
  geom_smooth(method = "lm")
```

## Reporting

Quelques exemples de rapports, tableaux de bord et applications réalisables avec R (et d'autres outils comme Shiny et Quarto)

-   [Indian blood banks](https://shiny.posit.co/r/gallery/government-public-sector/india-blood-banks/)
-   [New Zealand dashboard](https://shiny.posit.co/r/gallery/government-public-sector/nz-trade-dash/)
-   [Quarto HTML Basics](https://quarto-dev.github.io/quarto-gallery/articles/html/html.html)
-   [Intro au Tidyverse](https://larmarange.github.io/analyse-R/introduction-au-tidyverse.html)
